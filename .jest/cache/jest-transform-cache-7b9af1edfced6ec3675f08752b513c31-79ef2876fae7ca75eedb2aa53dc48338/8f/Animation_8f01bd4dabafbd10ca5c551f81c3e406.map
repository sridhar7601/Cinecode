{"version":3,"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_toConsumableArray2","_classCallCheck2","_createClass2","_Platform","_NativeAnimatedHelper","_AnimatedColor","_AnimatedProps","_AnimatedValueXY","startNativeAnimationNextId","Animation","key","start","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","stop","__nativeId","NativeAnimatedHelper","API","stopAnimation","__getNativeAnimationConfig","Error","__debouncedOnEnd","result","__onEnd","__findAnimatedPropsNodes","node","AnimatedProps","push","Platform","OS","AnimatedValueXY","AnimatedColor","child","__getChildren","apply","__startNativeAnimation","_this","startNativeAnimationWaitId","setWaitingForIdentifier","config","__makeNative","platformConfig","generateNewAnimationId","startAnimatingNode","__getNativeTag","__onAnimatedValueUpdateReceived","forEach","update","e","unsetWaitingForIdentifier"],"sources":["Animation.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n * @format\n */\n\n'use strict';\n\nimport type {PlatformConfig} from '../AnimatedPlatformConfig';\nimport type AnimatedNode from '../nodes/AnimatedNode';\nimport type AnimatedValue from '../nodes/AnimatedValue';\n\nimport Platform from '../../Utilities/Platform';\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\nimport AnimatedColor from '../nodes/AnimatedColor';\nimport AnimatedProps from '../nodes/AnimatedProps';\nimport AnimatedValueXY from '../nodes/AnimatedValueXY';\n\nexport type EndResult = {finished: boolean, value?: number, ...};\nexport type EndCallback = (result: EndResult) => void;\n\nexport type AnimationConfig = {\n  isInteraction?: boolean,\n  useNativeDriver: boolean,\n  platformConfig?: PlatformConfig,\n  onComplete?: ?EndCallback,\n  iterations?: number,\n};\n\nlet startNativeAnimationNextId = 1;\n\n// Important note: start() and stop() will only be called at most once.\n// Once an animation has been stopped or finished its course, it will\n// not be reused.\nexport default class Animation {\n  __active: boolean;\n  __isInteraction: boolean;\n  __nativeId: number;\n  __onEnd: ?EndCallback;\n  __iterations: number;\n\n  start(\n    fromValue: number,\n    onUpdate: (value: number) => void,\n    onEnd: ?EndCallback,\n    previousAnimation: ?Animation,\n    animatedValue: AnimatedValue,\n  ): void {}\n\n  stop(): void {\n    if (this.__nativeId) {\n      NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\n    }\n  }\n\n  __getNativeAnimationConfig(): any {\n    // Subclasses that have corresponding animation implementation done in native\n    // should override this method\n    throw new Error('This animation type cannot be offloaded to native');\n  }\n\n  // Helper function for subclasses to make sure onEnd is only called once.\n  __debouncedOnEnd(result: EndResult): void {\n    const onEnd = this.__onEnd;\n    this.__onEnd = null;\n    onEnd && onEnd(result);\n  }\n\n  __findAnimatedPropsNodes(node: AnimatedNode): Array<AnimatedProps> {\n    const result = [];\n\n    if (node instanceof AnimatedProps) {\n      result.push(node);\n      return result;\n    }\n\n    // Vectorized animations (animations on AnimatedValueXY, AnimatedColor nodes)\n    // are split into multiple animations for each component that execute in parallel.\n    // Calling update() on AnimatedProps when each animation completes results in\n    // potential flickering as all animations that are part of the vectorized animation\n    // may not have completed yet. For example, only the animation for the red channel of\n    // an animating color may have been completed, resulting in a temporary red color\n    // being rendered. So, for now, ignore AnimatedProps that use a vectorized animation.\n    if (\n      Platform.OS === 'ios' &&\n      (node instanceof AnimatedValueXY || node instanceof AnimatedColor)\n    ) {\n      return result;\n    }\n\n    for (const child of node.__getChildren()) {\n      result.push(...this.__findAnimatedPropsNodes(child));\n    }\n\n    return result;\n  }\n\n  __startNativeAnimation(animatedValue: AnimatedValue): void {\n    const startNativeAnimationWaitId = `${startNativeAnimationNextId}:startAnimation`;\n    startNativeAnimationNextId += 1;\n    NativeAnimatedHelper.API.setWaitingForIdentifier(\n      startNativeAnimationWaitId,\n    );\n    try {\n      const config = this.__getNativeAnimationConfig();\n      animatedValue.__makeNative(config.platformConfig);\n      this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\n      NativeAnimatedHelper.API.startAnimatingNode(\n        this.__nativeId,\n        animatedValue.__getNativeTag(),\n        config,\n        result => {\n          this.__debouncedOnEnd(result);\n\n          // When using natively driven animations, once the animation completes,\n          // we need to ensure that the JS side nodes are synced with the updated\n          // values.\n          const {value} = result;\n          if (value != null) {\n            animatedValue.__onAnimatedValueUpdateReceived(value);\n\n            // Once the JS side node is synced with the updated values, trigger an\n            // update on the AnimatedProps nodes to call any registered callbacks.\n            this.__findAnimatedPropsNodes(animatedValue).forEach(node =>\n              node.update(),\n            );\n          }\n        },\n      );\n    } catch (e) {\n      throw e;\n    } finally {\n      NativeAnimatedHelper.API.unsetWaitingForIdentifier(\n        startNativeAnimationWaitId,\n      );\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]}