a8f40391de930245652f74e730a6a685
'use strict';

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));
var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));
var _possibleConstructorReturn2 = _interopRequireDefault(require("@babel/runtime/helpers/possibleConstructorReturn"));
var _get2 = _interopRequireDefault(require("@babel/runtime/helpers/get"));
var _getPrototypeOf2 = _interopRequireDefault(require("@babel/runtime/helpers/getPrototypeOf"));
var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));
var _AnimatedInterpolation = _interopRequireDefault(require("./AnimatedInterpolation"));
var _AnimatedValue = _interopRequireDefault(require("./AnimatedValue"));
var _AnimatedWithChildren2 = _interopRequireDefault(require("./AnimatedWithChildren"));
function _callSuper(t, o, e) { return o = (0, _getPrototypeOf2.default)(o), (0, _possibleConstructorReturn2.default)(t, _isNativeReflectConstruct() ? Reflect.construct(o, e || [], (0, _getPrototypeOf2.default)(t).constructor) : o.apply(t, e)); }
function _isNativeReflectConstruct() { try { var t = !Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); } catch (t) {} return (_isNativeReflectConstruct = function _isNativeReflectConstruct() { return !!t; })(); }
var AnimatedMultiplication = exports.default = function (_AnimatedWithChildren) {
  function AnimatedMultiplication(a, b) {
    var _this;
    (0, _classCallCheck2.default)(this, AnimatedMultiplication);
    _this = _callSuper(this, AnimatedMultiplication);
    _this._a = typeof a === 'number' ? new _AnimatedValue.default(a) : a;
    _this._b = typeof b === 'number' ? new _AnimatedValue.default(b) : b;
    return _this;
  }
  (0, _inherits2.default)(AnimatedMultiplication, _AnimatedWithChildren);
  return (0, _createClass2.default)(AnimatedMultiplication, [{
    key: "__makeNative",
    value: function __makeNative(platformConfig) {
      this._a.__makeNative(platformConfig);
      this._b.__makeNative(platformConfig);
      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedMultiplication.prototype), "__makeNative", this).call(this, platformConfig);
    }
  }, {
    key: "__getValue",
    value: function __getValue() {
      return this._a.__getValue() * this._b.__getValue();
    }
  }, {
    key: "interpolate",
    value: function interpolate(config) {
      return new _AnimatedInterpolation.default(this, config);
    }
  }, {
    key: "__attach",
    value: function __attach() {
      this._a.__addChild(this);
      this._b.__addChild(this);
    }
  }, {
    key: "__detach",
    value: function __detach() {
      this._a.__removeChild(this);
      this._b.__removeChild(this);
      (0, _get2.default)((0, _getPrototypeOf2.default)(AnimatedMultiplication.prototype), "__detach", this).call(this);
    }
  }, {
    key: "__getNativeConfig",
    value: function __getNativeConfig() {
      return {
        type: 'multiplication',
        input: [this._a.__getNativeTag(), this._b.__getNativeTag()]
      };
    }
  }]);
}(_AnimatedWithChildren2.default);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJuYW1lcyI6WyJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwicmVxdWlyZSIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZXhwb3J0cyIsInZhbHVlIiwiZGVmYXVsdCIsIl9jbGFzc0NhbGxDaGVjazIiLCJfY3JlYXRlQ2xhc3MyIiwiX3Bvc3NpYmxlQ29uc3RydWN0b3JSZXR1cm4yIiwiX2dldDIiLCJfZ2V0UHJvdG90eXBlT2YyIiwiX2luaGVyaXRzMiIsIl9BbmltYXRlZEludGVycG9sYXRpb24iLCJfQW5pbWF0ZWRWYWx1ZSIsIl9BbmltYXRlZFdpdGhDaGlsZHJlbjIiLCJfY2FsbFN1cGVyIiwidCIsIm8iLCJlIiwiX2lzTmF0aXZlUmVmbGVjdENvbnN0cnVjdCIsIlJlZmxlY3QiLCJjb25zdHJ1Y3QiLCJjb25zdHJ1Y3RvciIsImFwcGx5IiwiQm9vbGVhbiIsInByb3RvdHlwZSIsInZhbHVlT2YiLCJjYWxsIiwiQW5pbWF0ZWRNdWx0aXBsaWNhdGlvbiIsIl9BbmltYXRlZFdpdGhDaGlsZHJlbiIsImEiLCJiIiwiX3RoaXMiLCJfYSIsIkFuaW1hdGVkVmFsdWUiLCJfYiIsImtleSIsIl9fbWFrZU5hdGl2ZSIsInBsYXRmb3JtQ29uZmlnIiwiX19nZXRWYWx1ZSIsImludGVycG9sYXRlIiwiY29uZmlnIiwiQW5pbWF0ZWRJbnRlcnBvbGF0aW9uIiwiX19hdHRhY2giLCJfX2FkZENoaWxkIiwiX19kZXRhY2giLCJfX3JlbW92ZUNoaWxkIiwiX19nZXROYXRpdmVDb25maWciLCJ0eXBlIiwiaW5wdXQiLCJfX2dldE5hdGl2ZVRhZyIsIkFuaW1hdGVkV2l0aENoaWxkcmVuIl0sInNvdXJjZXMiOlsiQW5pbWF0ZWRNdWx0aXBsaWNhdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCAoYykgTWV0YSBQbGF0Zm9ybXMsIEluYy4gYW5kIGFmZmlsaWF0ZXMuXG4gKlxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2UgZm91bmQgaW4gdGhlXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKlxuICogQGZsb3dcbiAqIEBmb3JtYXRcbiAqL1xuXG4ndXNlIHN0cmljdCc7XG5cbmltcG9ydCB0eXBlIHtQbGF0Zm9ybUNvbmZpZ30gZnJvbSAnLi4vQW5pbWF0ZWRQbGF0Zm9ybUNvbmZpZyc7XG5pbXBvcnQgdHlwZSB7SW50ZXJwb2xhdGlvbkNvbmZpZ1R5cGV9IGZyb20gJy4vQW5pbWF0ZWRJbnRlcnBvbGF0aW9uJztcbmltcG9ydCB0eXBlIEFuaW1hdGVkTm9kZSBmcm9tICcuL0FuaW1hdGVkTm9kZSc7XG5cbmltcG9ydCBBbmltYXRlZEludGVycG9sYXRpb24gZnJvbSAnLi9BbmltYXRlZEludGVycG9sYXRpb24nO1xuaW1wb3J0IEFuaW1hdGVkVmFsdWUgZnJvbSAnLi9BbmltYXRlZFZhbHVlJztcbmltcG9ydCBBbmltYXRlZFdpdGhDaGlsZHJlbiBmcm9tICcuL0FuaW1hdGVkV2l0aENoaWxkcmVuJztcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQW5pbWF0ZWRNdWx0aXBsaWNhdGlvbiBleHRlbmRzIEFuaW1hdGVkV2l0aENoaWxkcmVuIHtcbiAgX2E6IEFuaW1hdGVkTm9kZTtcbiAgX2I6IEFuaW1hdGVkTm9kZTtcblxuICBjb25zdHJ1Y3RvcihhOiBBbmltYXRlZE5vZGUgfCBudW1iZXIsIGI6IEFuaW1hdGVkTm9kZSB8IG51bWJlcikge1xuICAgIHN1cGVyKCk7XG4gICAgdGhpcy5fYSA9IHR5cGVvZiBhID09PSAnbnVtYmVyJyA/IG5ldyBBbmltYXRlZFZhbHVlKGEpIDogYTtcbiAgICB0aGlzLl9iID0gdHlwZW9mIGIgPT09ICdudW1iZXInID8gbmV3IEFuaW1hdGVkVmFsdWUoYikgOiBiO1xuICB9XG5cbiAgX19tYWtlTmF0aXZlKHBsYXRmb3JtQ29uZmlnOiA/UGxhdGZvcm1Db25maWcpIHtcbiAgICB0aGlzLl9hLl9fbWFrZU5hdGl2ZShwbGF0Zm9ybUNvbmZpZyk7XG4gICAgdGhpcy5fYi5fX21ha2VOYXRpdmUocGxhdGZvcm1Db25maWcpO1xuICAgIHN1cGVyLl9fbWFrZU5hdGl2ZShwbGF0Zm9ybUNvbmZpZyk7XG4gIH1cblxuICBfX2dldFZhbHVlKCk6IG51bWJlciB7XG4gICAgcmV0dXJuIHRoaXMuX2EuX19nZXRWYWx1ZSgpICogdGhpcy5fYi5fX2dldFZhbHVlKCk7XG4gIH1cblxuICBpbnRlcnBvbGF0ZTxPdXRwdXRUOiBudW1iZXIgfCBzdHJpbmc+KFxuICAgIGNvbmZpZzogSW50ZXJwb2xhdGlvbkNvbmZpZ1R5cGU8T3V0cHV0VD4sXG4gICk6IEFuaW1hdGVkSW50ZXJwb2xhdGlvbjxPdXRwdXRUPiB7XG4gICAgcmV0dXJuIG5ldyBBbmltYXRlZEludGVycG9sYXRpb24odGhpcywgY29uZmlnKTtcbiAgfVxuICBfX2F0dGFjaCgpOiB2b2lkIHtcbiAgICB0aGlzLl9hLl9fYWRkQ2hpbGQodGhpcyk7XG4gICAgdGhpcy5fYi5fX2FkZENoaWxkKHRoaXMpO1xuICB9XG5cbiAgX19kZXRhY2goKTogdm9pZCB7XG4gICAgdGhpcy5fYS5fX3JlbW92ZUNoaWxkKHRoaXMpO1xuICAgIHRoaXMuX2IuX19yZW1vdmVDaGlsZCh0aGlzKTtcbiAgICBzdXBlci5fX2RldGFjaCgpO1xuICB9XG5cbiAgX19nZXROYXRpdmVDb25maWcoKTogYW55IHtcbiAgICByZXR1cm4ge1xuICAgICAgdHlwZTogJ211bHRpcGxpY2F0aW9uJyxcbiAgICAgIGlucHV0OiBbdGhpcy5fYS5fX2dldE5hdGl2ZVRhZygpLCB0aGlzLl9iLl9fZ2V0TmF0aXZlVGFnKCldLFxuICAgIH07XG4gIH1cbn1cbiJdLCJtYXBwaW5ncyI6IkFBVUEsWUFBWTs7QUFBQyxJQUFBQSxzQkFBQSxHQUFBQyxPQUFBO0FBQUFDLE1BQUEsQ0FBQUMsY0FBQSxDQUFBQyxPQUFBO0VBQUFDLEtBQUE7QUFBQTtBQUFBRCxPQUFBLENBQUFFLE9BQUE7QUFBQSxJQUFBQyxn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