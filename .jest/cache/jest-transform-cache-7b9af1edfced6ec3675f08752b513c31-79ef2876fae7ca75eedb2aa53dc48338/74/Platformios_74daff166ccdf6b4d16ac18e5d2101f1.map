{"version":3,"names":["_NativePlatformConstantsIOS","_interopRequireDefault","require","Platform","__constants","OS","Version","constants","osVersion","NativePlatformConstantsIOS","getConstants","isPad","interfaceIdiom","isTV","isTesting","__DEV__","isDisableAnimations","_this$constants$isDis","select","spec","ios","native","default","module","exports"],"sources":["Platform.ios.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict\n */\n\nimport type {\n  Platform as PlatformType,\n  PlatformSelectSpec,\n} from './Platform.flow';\n\nimport NativePlatformConstantsIOS from './NativePlatformConstantsIOS';\n\nconst Platform: PlatformType = {\n  __constants: null,\n  OS: 'ios',\n  // $FlowFixMe[unsafe-getters-setters]\n  get Version(): string {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.osVersion;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get constants(): {|\n    forceTouchAvailable: boolean,\n    interfaceIdiom: string,\n    isTesting: boolean,\n    isDisableAnimations?: boolean,\n    osVersion: string,\n    reactNativeVersion: {|\n      major: number,\n      minor: number,\n      patch: number,\n      prerelease: ?number,\n    |},\n    systemName: string,\n  |} {\n    // $FlowFixMe[object-this-reference]\n    if (this.__constants == null) {\n      // $FlowFixMe[object-this-reference]\n      this.__constants = NativePlatformConstantsIOS.getConstants();\n    }\n    // $FlowFixMe[object-this-reference]\n    return this.__constants;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isPad(): boolean {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.interfaceIdiom === 'pad';\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isTV(): boolean {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.interfaceIdiom === 'tv';\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isTesting(): boolean {\n    if (__DEV__) {\n      // $FlowFixMe[object-this-reference]\n      return this.constants.isTesting;\n    }\n    return false;\n  },\n  // $FlowFixMe[unsafe-getters-setters]\n  get isDisableAnimations(): boolean {\n    // $FlowFixMe[object-this-reference]\n    return this.constants.isDisableAnimations ?? this.isTesting;\n  },\n  select: <T>(spec: PlatformSelectSpec<T>): T =>\n    // $FlowFixMe[incompatible-return]\n    'ios' in spec ? spec.ios : 'native' in spec ? spec.native : spec.default,\n};\n\nmodule.exports = Platform;\n"],"mappings":";AAeA,IAAAA,2BAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAMC,QAAsB,GAAG;EAC7BC,WAAW,EAAE,IAAI;EACjBC,EAAE,EAAE,KAAK;EAET,IAAIC,OAAOA,CAAA,EAAW;IAEpB,OAAO,IAAI,CAACC,SAAS,CAACC,SAAS;EACjC,CAAC;EAED,IAAID,SAASA,CAAA,EAaV;IAED,IAAI,IAAI,CAACH,WAAW,IAAI,IAAI,EAAE;MAE5B,IAAI,CAACA,WAAW,GAAGK,mCAA0B,CAACC,YAAY,CAAC,CAAC;IAC9D;IAEA,OAAO,IAAI,CAACN,WAAW;EACzB,CAAC;EAED,IAAIO,KAAKA,CAAA,EAAY;IAEnB,OAAO,IAAI,CAACJ,SAAS,CAACK,cAAc,KAAK,KAAK;EAChD,CAAC;EAED,IAAIC,IAAIA,CAAA,EAAY;IAElB,OAAO,IAAI,CAACN,SAAS,CAACK,cAAc,KAAK,IAAI;EAC/C,CAAC;EAED,IAAIE,SAASA,CAAA,EAAY;IACvB,IAAIC,OAAO,EAAE;MAEX,OAAO,IAAI,CAACR,SAAS,CAACO,SAAS;IACjC;IACA,OAAO,KAAK;EACd,CAAC;EAED,IAAIE,mBAAmBA,CAAA,EAAY;IAAA,IAAAC,qBAAA;IAEjC,QAAAA,qBAAA,GAAO,IAAI,CAACV,SAAS,CAACS,mBAAmB,YAAAC,qBAAA,GAAI,IAAI,CAACH,SAAS;EAC7D,CAAC;EACDI,MAAM,EAAE,SAAAA,OAAIC,IAA2B;IAAA,OAErC,KAAK,IAAIA,IAAI,GAAGA,IAAI,CAACC,GAAG,GAAG,QAAQ,IAAID,IAAI,GAAGA,IAAI,CAACE,MAAM,GAAGF,IAAI,CAACG,OAAO;EAAA;AAC5E,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGrB,QAAQ","ignoreList":[]}