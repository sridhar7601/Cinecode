{"version":3,"names":["_getJestObj","mock","_interopRequireDefault","require","_asyncToGenerator2","_react","_reactNative","_axios","_HomePage","_jsxRuntime","_require","jest","describe","it","_render","render","jsx","default","toJSON","expect","toMatchSnapshot","mockMovies","id","title","release_date","axios","get","mockResolvedValueOnce","data","results","_render2","getByText","waitFor","toBeDefined","genre_ids","_render3","getByLabelText","fireEvent","press","toThrow"],"sources":["HomePage.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, fireEvent, waitFor } from '@testing-library/react-native';\nimport axios from 'axios';\nimport HomePage from './HomePage';\n\njest.mock('axios');\n\ndescribe('HomePage', () => {\n  it('should render the component', () => {\n    const { toJSON } = render(<HomePage />);\n    expect(toJSON()).toMatchSnapshot();\n  });\n\n  it('should fetch and display movies by year', async () => {\n    const mockMovies = [\n      { id: 1, title: 'Movie 1', release_date: '2012-01-01' },\n      { id: 2, title: 'Movie 2', release_date: '2013-02-01' },\n      { id: 3, title: 'Movie 3', release_date: '2014-03-01' },\n    ];\n\n    axios.get.mockResolvedValueOnce({ data: { results: mockMovies } });\n\n    const { getByText } = render(<HomePage />);\n\n    await waitFor(() => {\n      expect(getByText('2012')).toBeDefined();\n      expect(getByText('2013')).toBeDefined();\n      expect(getByText('2014')).toBeDefined();\n    });\n  });\n\n  it('should filter movies by selected genres', async () => {\n    const mockMovies = [\n      { id: 1, title: 'Action Movie', genre_ids: [28] },\n      { id: 2, title: 'Sci-Fi Movie', genre_ids: [12] },\n      { id: 3, title: 'Horror Movie', genre_ids: [16] },\n    ];\n\n    axios.get.mockResolvedValueOnce({ data: { results: mockMovies } });\n\n    const { getByLabelText, getByText } = render(<HomePage />);\n\n    fireEvent.press(getByLabelText('28'));\n    fireEvent.press(getByLabelText('12'));\n\n    await waitFor(() => {\n      expect(getByText('Action Movie')).toBeDefined();\n      expect(getByText('Sci-Fi Movie')).toBeDefined();\n      expect(() => getByText('Horror Movie')).toThrow();\n    });\n  });\n});"],"mappings":"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","ignoreList":[]}